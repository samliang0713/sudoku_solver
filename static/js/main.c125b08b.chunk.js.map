{"version":3,"sources":["components/Header.js","components/Button.js","components/SolutionButton.js","components/ImportButton.js","sudoku/visual.js","sudoku/algorithm.js","components/Panel.js","components/Solver.js","components/App.js","index.js"],"names":["Header","props","className","id","Button","onClick","onButtonClick","text","SolutionButton","state","solutionNum","solve","board","length","display","setState","updateText","renderText","this","prevProps","prevState","_","isEqual","React","Component","ImportButton","renderForm","onSubmit","onFormSubmit","type","inputMode","value","numString","placeholder","onChange","e","updateNumString","removeProgressSquares","currentProgressSquares","document","getElementsByClassName","Array","from","forEach","square","classList","remove","onArrowKeys","key","currentId","target","getElementById","Number","parseInt","focus","newBoard","i","isLegalMove","num","row","col","j","rowBlockIndex","Math","floor","colBlockIndex","isLegalPlacement","solveHelper","solutionList","isFilled","push","cloneDeep","nextEmptyCoordinates","Error","findNextEmpty","isBoardLegal","window","alert","solution","generateRandomNineNum","temp","randomNineNum","m","random","generateRandomFilledBoard","k","randomNine","z","randomBoard","fillBlock","splice","numsToFillFirstColumn","filter","pop","calculateSumOfCandidates","puzzleBoard","nums","sumOfCandidates","Panel","useState","setNumString","pairA","nextBoard","difficultyEstimate","generateSudoku","setBoard","setProgressBoard","solutionBoard","progressSquares","add","currentBoard","progressBoard","emptyBoard","preventDefault","importBoard","Solver","n","currentSolutionSquares","removeSolutionSquares","table","children","animate","opacity","duration","easing","animateTable","processInput","contains","isInteger","nativeEvent","data","targetRow","targetCol","rowCounter","colCounter","map","onKeyDown","isSolved","renderBoard","renderSuccessMessage","App","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.c125b08b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui one item menu\" id=\"header\">\r\n        <div className=\"item\">Sudoku Solver</div>\r\n      </div>\r\n\r\n      <div className=\"ui center aligned text container\" id=\"instruction\">\r\n        <p>Start playing in 1 of the 3 following ways:</p>\r\n        <div id=\"waysWrapper\">\r\n          <div className=\"ui left aligned text container\" id=\"waysToStart\">\r\n            1. Click <b>\"Generate Sudoku\"</b> <br />\r\n            2. Enter your board and then click <b>\"Set Board\"</b> <br />\r\n            3. Click <b>\"Import Puzzle\"</b> to import a puzzle <br />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div className=\"buttonWrap\">\r\n      <button onClick={props.onButtonClick}>{props.text}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Button from \"./Button\";\r\n\r\nclass SolutionButton extends React.Component {\r\n  state = {\r\n    solutionNum: this.props.solve(this.props.board).length,\r\n    text: \"\",\r\n    display: false,\r\n  };\r\n\r\n  onButtonClick = () => {\r\n    this.setState({\r\n      display: !this.state.display,\r\n      text: this.updateText(this.state.solutionNum),\r\n    });\r\n  };\r\n\r\n  updateText = (solutionNum) => {\r\n    if (solutionNum === 0) return \"This board does not have a solution\";\r\n    else if (solutionNum === 1) return \"This board has 1 solution\";\r\n    else if (solutionNum > 600) return \"This board has more than 600 solutions\";\r\n    else return `This board has ${solutionNum} solution(s)`;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ text: this.updateText(this.state.solutionNum) });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!_.isEqual(prevProps.board, this.props.board)) {\r\n      this.setState({\r\n        solutionNum: this.props.solve(this.props.board).length,\r\n        display: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  renderText = () => {\r\n    if (this.state.display) {\r\n      return (\r\n        <div className=\"ui pointing label\">\r\n          <p>{this.state.text}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"solutionButton\">\r\n        <Button onButtonClick={this.onButtonClick} text=\"Show # of Solutions\" />\r\n        {this.renderText()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SolutionButton;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nclass ImportButton extends React.Component {\r\n  state = { display: false };\r\n\r\n  onButtonClick = () => {\r\n    this.setState({ display: !this.state.display });\r\n  };\r\n\r\n  renderForm = () => {\r\n    if (this.state.display) {\r\n      return (\r\n        <div className=\"ui pointing label\">\r\n          <form onSubmit={this.props.onFormSubmit}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                inputMode=\"numeric\"\r\n                id=\"importNumString\"\r\n                value={this.props.numString}\r\n                placeholder=\"Enter a 81-digit string\"\r\n                onChange={(e) => this.props.updateNumString(e)}\r\n              ></input>\r\n              <div>\r\n                <button>Submit</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"importButton\">\r\n        <Button onButtonClick={this.onButtonClick} text=\"Import Puzzle\" />\r\n        {this.renderForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportButton;\r\n","const printBoard = function (board) {\r\n  for (let i = 0; i < board.length; i++) {\r\n    let rowContent = \"\";\r\n    for (let j = 0; j < board[0].length; j++) {\r\n      rowContent += board[i][j] + \" \";\r\n      if (j === 2 || j === 5) rowContent += \"| \";\r\n    }\r\n    console.log(rowContent);\r\n    if (i === 2 || i === 5) console.log(\"- - - + - - - + - - -\");\r\n  }\r\n};\r\n\r\nconst removeProgressSquares = function () {\r\n  const currentProgressSquares = document.getElementsByClassName(\"progress\");\r\n  Array.from(currentProgressSquares).forEach((square) => {\r\n    square.classList.remove(\"progress\");\r\n  });\r\n};\r\n\r\nconst removeSolutionSquares = function () {\r\n  const currentSolutionSquares = document.getElementsByClassName(\"solution\");\r\n  Array.from(currentSolutionSquares).forEach((square) => {\r\n    square.classList.remove(\"solution\");\r\n  });\r\n};\r\n\r\nconst onArrowKeys = function (e) {\r\n  const key = e.key;\r\n  const currentId = e.target.id;\r\n  switch (key) {\r\n    case \"ArrowUp\":\r\n      document\r\n        .getElementById(\r\n          `${\r\n            Number.parseInt(currentId[0]) !== 1\r\n              ? Number.parseInt(currentId[0]) - 1\r\n              : 1\r\n          }${currentId[1]}`\r\n        )\r\n        .focus();\r\n      break;\r\n    case \"ArrowDown\":\r\n      document\r\n        .getElementById(\r\n          `${\r\n            Number.parseInt(currentId[0]) !== 9\r\n              ? Number.parseInt(currentId[0]) + 1\r\n              : 9\r\n          }${currentId[1]}`\r\n        )\r\n        .focus();\r\n      break;\r\n    case \"ArrowLeft\":\r\n      document\r\n        .getElementById(\r\n          `${currentId[0]}${\r\n            Number.parseInt(currentId[1]) !== 1\r\n              ? Number.parseInt(currentId[1]) - 1\r\n              : 1\r\n          }`\r\n        )\r\n        .focus();\r\n      break;\r\n    case \"ArrowRight\":\r\n      document\r\n        .getElementById(\r\n          `${currentId[0]}${\r\n            Number.parseInt(currentId[1]) !== 9\r\n              ? Number.parseInt(currentId[1]) + 1\r\n              : 9\r\n          }`\r\n        )\r\n        .focus();\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst animateTable = function () {\r\n  const table = document.getElementById(\"boardTable\");\r\n  for (let i = 0; i < table.children[0].children.length; i++) {\r\n    table.children[0].children[i].animate([{ opacity: 0 }, { opacity: 1 }], {\r\n      duration: 1500,\r\n      easing: \"ease-in-out\",\r\n    });\r\n  }\r\n};\r\nexport {\r\n  printBoard,\r\n  removeProgressSquares,\r\n  removeSolutionSquares,\r\n  onArrowKeys,\r\n  animateTable,\r\n};\r\n","import _ from \"lodash\";\r\n\r\nconst newBoard = function () {\r\n  const board = new Array(9);\r\n  for (let i = 0; i < board.length; i++) {\r\n    board[i] = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n  }\r\n  return board;\r\n};\r\n\r\nconst isLegalMove = function (num, row, col, board) {\r\n  if (num > 9 || num < 1 || row > 9 || row < 1 || col > 9 || col < 1) {\r\n    return false;\r\n  }\r\n\r\n  // check row\r\n  for (let j = 0; j < board.length; j++) {\r\n    if (j === col - 1) continue;\r\n    if (board[row - 1][j] === num) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // check col\r\n  for (let i = 0; i < board[0].length; i++) {\r\n    if (i === row - 1) continue;\r\n    if (board[i][col - 1] === num) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // check block\r\n  const rowBlockIndex = Math.floor((row - 1) / 3) * 3;\r\n  const colBlockIndex = Math.floor((col - 1) / 3) * 3;\r\n\r\n  for (let i = rowBlockIndex; i < rowBlockIndex + 3; i++) {\r\n    for (let j = colBlockIndex; j < colBlockIndex + 3; j++) {\r\n      if (i === row - 1 && j === col - 1) continue;\r\n      if (board[i][j] === num) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst isLegalPlacement = function (num, row, col, board) {\r\n  if (num === 0) return true;\r\n  return isLegalMove(num, row, col, board);\r\n};\r\n\r\nconst isBoardLegal = function (board) {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[0].length; j++) {\r\n      if (\r\n        board[i][j] !== 0 &&\r\n        !isLegalPlacement(board[i][j], i + 1, j + 1, board)\r\n      )\r\n        return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n// find next empty location by row\r\nconst findNextEmpty = function (row, col, board) {\r\n  if (row > 9 || row < 1 || col > 9 || col < 1) {\r\n    throw new Error(\"Invalid row or col number\");\r\n  }\r\n\r\n  for (let j = col - 1; j < board[0].length; j++) {\r\n    if (board[row - 1][j] === 0) return [row, j + 1];\r\n  }\r\n\r\n  for (let i = row; i < board.length; i++) {\r\n    for (let j = 0; j < board[0].length; j++) {\r\n      if (board[i][j] === 0) return [i + 1, j + 1];\r\n    }\r\n  }\r\n\r\n  throw new Error(\"Cannot find next Empty!\");\r\n};\r\n\r\nconst isFilled = function (board) {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[0].length; j++) {\r\n      if (board[i][j] === 0) return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nconst isSolved = function (board) {\r\n  for (let row = 1; row <= board.length; row++) {\r\n    for (let col = 1; col <= board.length; col++) {\r\n      if (\r\n        board[row - 1][col - 1] === 0 ||\r\n        !isLegalPlacement(board[row - 1][col - 1], row, col, board)\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n// Uses backtracking algorithm to solve the sudoku puzzle\r\nconst solveHelper = function (row, col, board, solutionList) {\r\n  if (isFilled(board)) {\r\n    solutionList.push(_.cloneDeep(board));\r\n    return;\r\n  }\r\n\r\n  if (board[row - 1][col - 1] !== 0) {\r\n    const nextEmptyCoordinates = findNextEmpty(row, col, board);\r\n    row = nextEmptyCoordinates[0];\r\n    col = nextEmptyCoordinates[1];\r\n  }\r\n\r\n  for (let i = 1; i <= 9; i++) {\r\n    if (solutionList.length >= 600) break;\r\n    if (isLegalMove(i, row, col, board)) {\r\n      board[row - 1][col - 1] = i;\r\n      solveHelper(row, col, board, solutionList);\r\n      board[row - 1][col - 1] = 0;\r\n    }\r\n  }\r\n};\r\n\r\nconst solve = function (board) {\r\n  if (!isBoardLegal(board)) {\r\n    window.alert(\"No solution because the board violates rules\");\r\n    return [];\r\n  }\r\n  const solution = _.cloneDeep(board);\r\n\r\n  const solutionList = [];\r\n  solveHelper(1, 1, solution, solutionList);\r\n  if (solutionList.length === 0) {\r\n    window.alert(\"No solution available\");\r\n    return [];\r\n  }\r\n  return solutionList;\r\n};\r\n\r\nconst generateRandomNineNum = function () {\r\n  const randomNineNum = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  let m = randomNineNum.length,\r\n    i,\r\n    temp;\r\n  while (m) {\r\n    i = Math.floor(Math.random() * m);\r\n    m -= 1;\r\n    temp = randomNineNum[m];\r\n    randomNineNum[m] = randomNineNum[i];\r\n    randomNineNum[i] = temp;\r\n  }\r\n  return randomNineNum;\r\n};\r\n\r\nconst generateRandomFilledBoard = function () {\r\n  const randomBoard = newBoard();\r\n\r\n  // Randomly fill the top-left, top-middle, and top-right blocks\r\n  let k, rowBlockIndex, colBlockIndex, randomNine, i, j, z;\r\n\r\n  k = 0;\r\n\r\n  fillBlock: while (k < 3) {\r\n    rowBlockIndex = 0;\r\n    colBlockIndex = k * 3;\r\n    randomNine = generateRandomNineNum();\r\n    for (i = rowBlockIndex; i < rowBlockIndex + 3; i++) {\r\n      for (j = colBlockIndex; j < colBlockIndex + 3; j++) {\r\n        for (z = 0; z < randomNine.length; z++) {\r\n          if (isLegalMove(randomNine[z], i + 1, j + 1, randomBoard)) {\r\n            randomBoard[i][j] = randomNine[z];\r\n            randomNine.splice(z, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /* check if any of the top row contains 0 - if true, start refilling at\r\n     * top-middle block\r\n     */\r\n\r\n    for (i = rowBlockIndex; i < rowBlockIndex + 3; i++) {\r\n      for (j = colBlockIndex; j < colBlockIndex + 3; j++) {\r\n        if (randomBoard[i][j] === 0) {\r\n          k = 1;\r\n          continue fillBlock;\r\n        }\r\n      }\r\n    }\r\n    k++;\r\n  }\r\n\r\n  // fill the first column\r\n\r\n  const numsToFillFirstColumn = generateRandomNineNum().filter(\r\n    (num) =>\r\n      num !== randomBoard[0][0] &&\r\n      num !== randomBoard[1][0] &&\r\n      num !== randomBoard[2][0]\r\n  );\r\n\r\n  for (j = 3; j < randomBoard[0].length; j++) {\r\n    randomBoard[j][0] = numsToFillFirstColumn.pop();\r\n  }\r\n\r\n  // solved the random board to generate a filled, legal board\r\n\r\n  return solve(randomBoard)[0];\r\n};\r\n\r\nconst calculateSumOfCandidates = function (puzzleBoard) {\r\n  const nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  let sumOfCandidates = 0,\r\n    i,\r\n    j,\r\n    num;\r\n\r\n  for (i = 0; i < puzzleBoard.length; i++) {\r\n    for (j = 0; j < puzzleBoard[0].length; j++) {\r\n      if (puzzleBoard[i][j] === 0) {\r\n        for (num of nums) {\r\n          if (isLegalMove(num, i + 1, j + 1, puzzleBoard)) sumOfCandidates++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return sumOfCandidates;\r\n};\r\n\r\nconst generateSudoku = function () {\r\n  let difficultyEstimate = 0,\r\n    pairA,\r\n    board,\r\n    nextBoard;\r\n  while (difficultyEstimate < 130) {\r\n    board = generateRandomFilledBoard();\r\n\r\n    /* keeps removing clues\r\n     * until the board can be solved with more than 1 solution\r\n     */\r\n    while (true) {\r\n      do {\r\n        pairA = [Math.floor(Math.random() * 9), Math.floor(Math.random() * 9)];\r\n      } while (board[pairA[0]][pairA[1]] === 0);\r\n\r\n      nextBoard = _.cloneDeep(board);\r\n      nextBoard[pairA[0]][pairA[1]] = 0;\r\n\r\n      if (solve(nextBoard).length > 1) break;\r\n      else {\r\n        board[pairA[0]][pairA[1]] = 0;\r\n      }\r\n    }\r\n    difficultyEstimate = calculateSumOfCandidates(board);\r\n  }\r\n  return board;\r\n};\r\n\r\nexport {\r\n  newBoard,\r\n  isLegalMove,\r\n  isLegalPlacement,\r\n  isBoardLegal,\r\n  findNextEmpty,\r\n  isFilled,\r\n  isSolved,\r\n  solveHelper,\r\n  solve,\r\n  generateRandomNineNum,\r\n  generateRandomFilledBoard,\r\n  generateSudoku,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport SolutionButton from \"./SolutionButton\";\r\nimport ImportButton from \"./ImportButton\";\r\nimport _ from \"lodash\";\r\n\r\nimport { removeProgressSquares } from \"../sudoku/visual\";\r\nimport { newBoard, solve, generateSudoku } from \"../sudoku/algorithm\";\r\n\r\nconst Panel = (props) => {\r\n  const [numString, setNumString] = useState(\"\");\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.target[0].value.length === 81) {\r\n      props.importBoard(e.target[0].value);\r\n    } else\r\n      window.alert(\r\n        \"Incorrect length. Please make sure the string contains 81 digits.\"\r\n      );\r\n  };\r\n\r\n  const updateNumString = (e) => {\r\n    setNumString(e.target.value);\r\n  };\r\n\r\n  const onRefreshButtonClick = () => {\r\n    const emptyBoard = newBoard();\r\n    props.setBoard(emptyBoard);\r\n    props.setProgressBoard(_.cloneDeep(emptyBoard));\r\n  };\r\n\r\n  const onSolveButtonClick = () => {\r\n    if (solve(props.board).length) {\r\n      const solutionBoard = solve(props.board)[0];\r\n      props.setProgressBoard(solutionBoard);\r\n      const progressSquares = document.getElementsByClassName(\"progress\");\r\n      Array.from(progressSquares).forEach((square) => {\r\n        square.classList.add(\"solution\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSetBoardButtonClick = () => {\r\n    const currentBoard = _.cloneDeep(props.progressBoard);\r\n    props.setBoard(currentBoard);\r\n    removeProgressSquares();\r\n  };\r\n\r\n  const onGenerateSudokuButtonClick = () => {\r\n    const newBoard = generateSudoku();\r\n    props.setBoard(newBoard);\r\n    props.setProgressBoard(newBoard);\r\n    removeProgressSquares();\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container center aligned\">\r\n      <div id=\"panelRow1\">\r\n        <Button\r\n          onButtonClick={onGenerateSudokuButtonClick}\r\n          text=\"Generate Sudoku\"\r\n        />\r\n        <Button onButtonClick={onSolveButtonClick} text=\"Solve Puzzle\" />\r\n      </div>\r\n\r\n      <div id=\"panelRow2\">\r\n        <Button onButtonClick={onSetBoardButtonClick} text=\"Set Board\" />\r\n        <Button onButtonClick={onRefreshButtonClick} text=\"Clear Board\" />\r\n      </div>\r\n      <div id=\"panelRow3\">\r\n        <SolutionButton solve={solve} board={props.board} />\r\n        <ImportButton\r\n          onFormSubmit={onFormSubmit}\r\n          updateNumString={updateNumString}\r\n          numString={numString}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import Panel from \"./Panel\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nimport \"../css/Solver.css\";\r\nimport { newBoard, isLegalPlacement, isSolved } from \"../sudoku/algorithm\";\r\nimport {\r\n  removeProgressSquares,\r\n  removeSolutionSquares,\r\n  onArrowKeys,\r\n  animateTable,\r\n} from \"../sudoku/visual\";\r\n\r\nclass Solver extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { board: newBoard(), progressBoard: newBoard() };\r\n  }\r\n\r\n  /*\r\n   * Loading Sudoku\r\n   */\r\n\r\n  importBoard = (numString) => {\r\n    const importBoard = newBoard();\r\n    if (numString.length !== importBoard.length * importBoard.length)\r\n      throw new Error(\r\n        \"Fail to import: numString length is not equal to board length ^ 2\"\r\n      );\r\n\r\n    let i = 0;\r\n    let j = 0;\r\n\r\n    for (let n = 0; n < numString.length; n++) {\r\n      importBoard[i][j] = parseInt(numString[n]);\r\n      if (j !== 8) {\r\n        j += 1;\r\n      } else {\r\n        i += 1;\r\n        j = 0;\r\n      }\r\n    }\r\n\r\n    removeProgressSquares();\r\n\r\n    this.setBoard(importBoard);\r\n    this.setProgressBoard(_.cloneDeep(importBoard));\r\n  };\r\n\r\n  setBoard = (board) => {\r\n    removeSolutionSquares();\r\n    animateTable();\r\n    this.setState({ board });\r\n  };\r\n\r\n  setProgressBoard = (board) => {\r\n    this.setState({ progressBoard: board });\r\n  };\r\n\r\n  /*\r\n   *Render Elements & Display\r\n   */\r\n\r\n  processInput = (e) => {\r\n    if (e.target.classList.contains(\"solution\"))\r\n      e.target.classList.remove(\"solution\");\r\n\r\n    // Input must be a number\r\n    if (Number.isInteger(Number(e.nativeEvent.data))) {\r\n      const newBoard = _.cloneDeep(this.state.progressBoard);\r\n      const targetRow = e.target.id[0];\r\n      const targetCol = e.target.id[1];\r\n      if (this.state.board[targetRow - 1][targetCol - 1] === 0) {\r\n        newBoard[targetRow - 1][targetCol - 1] = Number(e.nativeEvent.data);\r\n        this.setState({ progressBoard: newBoard });\r\n      }\r\n    }\r\n  };\r\n\r\n  renderBoard() {\r\n    let rowCounter = 0;\r\n    let colCounter = 0;\r\n    return this.state.progressBoard.map((row) => {\r\n      rowCounter += 1;\r\n      return (\r\n        <tr key={`row${rowCounter}`}>\r\n          {row.map((num) => {\r\n            if (colCounter >= 9) colCounter = 1;\r\n            else colCounter += 1;\r\n            return (\r\n              <td key={`${rowCounter}${colCounter}`}>\r\n                <input\r\n                  className=\"numSquare\"\r\n                  placeholder={num === 0 ? \"\" : num}\r\n                  value={num === 0 ? \"\" : num}\r\n                  onChange={(e) => {\r\n                    this.processInput(e);\r\n                  }}\r\n                  onKeyDown={onArrowKeys}\r\n                  id={`${rowCounter}${colCounter}`}\r\n                ></input>\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderSuccessMessage() {\r\n    if (isSolved(this.state.progressBoard)) {\r\n      return (\r\n        <div id=\"successMessage\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          Congrats! <br />\r\n          You solved the puzzle!\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Lifecycle\r\n   */\r\n\r\n  componentDidMount() {\r\n    for (let row = 1; row <= this.state.board.length; row++) {\r\n      for (let col = 1; col <= this.state.board[0].length; col++) {\r\n        if (this.state.board[row - 1][col - 1] === 0) {\r\n          document.getElementById(`${row}${col}`).classList.add(\"progress\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    for (let row = 1; row <= this.state.board.length; row++) {\r\n      for (let col = 1; col <= this.state.board[0].length; col++) {\r\n        if (this.state.board[row - 1][col - 1] === 0) {\r\n          document.getElementById(`${row}${col}`).classList.add(\"progress\");\r\n        }\r\n\r\n        if (\r\n          !isLegalPlacement(\r\n            this.state.progressBoard[row - 1][col - 1],\r\n            row,\r\n            col,\r\n            this.state.progressBoard\r\n          )\r\n        ) {\r\n          document.getElementById(`${row}${col}`).classList.add(\"illegal\");\r\n        } else if (\r\n          document.getElementById(`${row}${col}`).classList.contains(\"illegal\")\r\n        ) {\r\n          document.getElementById(`${row}${col}`).classList.remove(\"illegal\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"ui container\" id=\"tableWrapper\">\r\n          <table className=\"ui celled table\" id=\"boardTable\">\r\n            <tbody>{this.renderBoard()}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"ui center aligned container\">\r\n          <div\r\n            className=\"ui container center aligned\"\r\n            id=\"successMessageWrapper\"\r\n          >\r\n            {this.renderSuccessMessage()}\r\n          </div>\r\n          <Panel\r\n            importBoard={this.importBoard}\r\n            progressBoard={this.state.progressBoard}\r\n            board={this.state.board}\r\n            setProgressBoard={this.setProgressBoard}\r\n            setBoard={this.setBoard}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Solver;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Solver from \"./Solver\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Solver />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}